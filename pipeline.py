#!/usr/bin/env python3
import subprocess
import sys
import os

# On utilise le m√™me interpr√©teur Python que celui qui lance ce script
PYTHON = sys.executable

# Liste des scripts √† ex√©cuter dans l'ordre
STEPS = [
    "generate_script.py",          # g√©n√®re voice_script.txt
    "generate_slides.py",          # g√©n√®re slides.pptx
    "export_slides.py",            # exporte les slides en images
    "generate_audio_segments.py",  # segmente et g√©n√®re audio1.mp3, audio2.mp3, ...
    "make_slides_video.py",        # cr√©e slides_video.mp4 (slides+audio)
    "generate_avatar.py",          # compose slides_video.mp4 + avatar.mp4 ‚Üí final_video.mp4
]

def run_step(script_name):
    print(f"\n‚û°Ô∏è Lancement de {script_name} avec {PYTHON}")
    try:
        subprocess.run([PYTHON, script_name], check=True)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå √âchec de {script_name} (code {e.returncode})")
        sys.exit(1)

def main():
    # V√©rifie qu'on est bien dans le bon dossier
    for step in STEPS:
        if not os.path.exists(step):
            print(f"‚ùå Fichier introuvable¬†: {step}")
            sys.exit(1)

    # Ex√©cution s√©quentielle
    for step in STEPS:
        run_step(step)

    print("\nüéâ Pipeline termin√© avec succ√®s¬†! Le fichier final est `final_video.mp4`")

if __name__ == "__main__":
    main()
